// 配置方式：将此配置加入到Model的gradle配置文件末尾即可
//ext {
//    PUBLISH_GROUP_ID = "io.github.15198184721"  //申请的mven的GroupId
//    PUBLISH_ARTIFACT_ID = 'AndroidSandHook'     //项目名,可以理解为除了GroupId之外的二级引用,一般为model名称
//    PUBLISH_VERSION = android.defaultConfig.versionName  //版本号(直接引用了Model的版本号名称)
//}
//
//apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"

buildscript {
    ext {
        kotlin_version = "1.4.31"
        appcompat = "1.2.0"
        dokka_version = '1.4.10.2'
    }
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {

        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version" //新添加的这一classpath

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//apply plugin: 'maven'
//
//task sourceJar (type:Jar) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}
//
//// 注意：如果是该库引用了第三方的本地库。那么需要关联打包：
//// 参考:https://github.com/kezong/fat-aar-android/blob/master/README_CN.md
//
//uploadArchives {
//    outputs.upToDateWhen { false }  // do not UP-TO_DATE
//    //编译model
////    dependsOn("assemble")
//    //将编译的model文件上传maven服务器
//    configuration = configurations.archives
//
//    repositories {
//        mavenDeployer {
//            pom.project {
//                groupId PUBLISH_GROUP_ID
//                artifactId PUBLISH_ARTIFACT_ID
//                version PUBLISH_VERSION
//                description '提交的描述信息...'
//            }
//            // 仓库路径（只能是hosted仓库）
//            repository(url: 'http://123.57.255.137:8888/repository/lcl_repository/') {
//                // 你 Nexus 的账户密码
//                authentication(userName: 'uploadUser', password: 'uploadUser123')
//            }
//        }
//    }
//}

apply plugin: 'maven'

def getReleaseRepositoryUrl() {
    return "http://123.57.255.137:8888/repository/lcl_repository/"
}

def getRepositoryUsername() {
    return "uploadUser"
}

def getRepositoryPassword() {
    return "uploadUser123"
}

afterEvaluate { project ->
    // 将源码打包发布
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts {
        archives androidSourcesJar
//        archives androidJavadocsJar
    }

    uploadArchives {
        outputs.upToDateWhen { false }
//        configuration = configurations.archives
        repositories {
            mavenDeployer {
                pom.groupId = PUBLISH_GROUP_ID
                pom.artifactId = PUBLISH_ARTIFACT_ID
                pom.version = PUBLISH_VERSION
                repository(url: getReleaseRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
            }
        }
    }

}